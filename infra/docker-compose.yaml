services:
  api:
    build:
      context: ../api
      dockerfile: ../api/Dockerfile
      target: development
    command: npm run start:debug
    env_file:
      - ../api/.env
    ports:
      - "3000:3000"
      - "9229:9229"
    volumes:
      - ../api:/usr/src/app
    depends_on:
      mongo:
        condition: service_healthy

  # client:
  #   build:
  #     context: ../client
  #     dockerfile: ../client/Dockerfile
  #     target: development
  #   command: npm run dev
  #   env_file:
  #     - ../client/.env
  #   ports:
  #     - "4000:3000"
  #   volumes:
  #     - ../client:/usr/src/app
  #     - /usr/src/app/node_modules

  postgres:
    image: postgres:15-alpine
    ports:
      - "${DATABASE_PORT}:5432"
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - avaliapro-postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  mongo:
    image: mongo:6.0
    container_name: avaliapro-mongo-1
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    volumes:
      - avaliapro-mongo-data:/data/db
    healthcheck:
      test:
        [
          "CMD",
          "mongosh",
          "--username",
          "${MONGO_INITDB_ROOT_USERNAME}",
          "--password",
          "${MONGO_INITDB_ROOT_PASSWORD}",
          "--authenticationDatabase",
          "admin",
          "--eval",
          "db.adminCommand({ ping: 1 })",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

volumes:
  avaliapro-postgres-data:
      driver: local
  avaliapro-mongo-data:
    driver: local
    